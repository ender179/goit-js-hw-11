{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '46813700-d54068e337851aebc3c875554'; // Замініть на свій ключ  \n\nexport const fetchImages = async (query) => {  \n    const url = `https://pixabay.com/api/?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&safesearch=true`;\n    \n    try {  \n        const response = await fetch(url);  \n        if (!response.ok) {  \n            throw new Error('Network response was not ok');  \n        }  \n        const data = await response.json();  \n        return data; // Повертаємо весь об'єкт data\n    } catch (error) {  \n        throw error;  \n    }  \n};\n\n// Приклад використання\nconst getImages = async (query) => {\n    try {\n        const imagesData = await fetchImages(query);\n        const imageHits = imagesData.hits; // Дістаємо масив зображень\n    } catch (error) {\n        console.error('Error fetching images:', error);\n    }\n};\n\n// Виклик функції\ngetImages('nature'); // Замість 'nature' ви можете вказати будь-який запит","// render-functions.js\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nexport const renderImages = (images) => {\n    const gallery = document.querySelector('.gallery');\n    gallery.innerHTML = ''; // Очищаємо галерею перед новим рендерингом\n\n    if (images.length === 0) {\n        showAlert('Sorry, there are no images matching your search query. Please try again!');\n        return;\n    }\n\n    const markup = images.map(image => `\n        <a href=\"${image.largeImageURL}\">\n            <div class=\"gallery-item\">\n                <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n                <div class=\"info\">\n                    <p>Likes: ${image.likes}</p>\n                    <p>Views: ${image.views}</p>\n                    <p>Comments: ${image.comments}</p>\n                    <p>Downloads: ${image.downloads}</p>\n                </div>\n            </div>\n        </a>\n    `).join('');\n\n    gallery.insertAdjacentHTML('beforeend', markup);\n};\n\nexport const showAlert = (message) => {\n    iziToast.error({\n        title: 'Error',\n        message: message,\n        position: 'topRight',\n    });\n};","import { fetchImages } from './js/pixabay-api';  \nimport { renderImages } from './js/render-functions';  \nimport iziToast from 'izitoast';  \nimport 'izitoast/dist/css/iziToast.min.css';  \n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const form = document.querySelector('.js-search');  \n    const loader = document.querySelector('.loader');  \n    const gallery = document.querySelector('.gallery');  \n\n    if (!form) {\n        console.error(\"Форма з класом .js-search не знайдена\");\n        return;\n    }\n\n    form.addEventListener('submit', async (event) => {  \n        event.preventDefault(); // Зупиняємо стандартну поведінку  \n \n        const query = event.currentTarget.elements.searchQuery.value.trim();\n\n        if (!query) {  \n            iziToast.error({ title: 'Error', message: 'Please enter a search query' });  \n            return;  \n        }  \n\n        loader.style.display = 'block';  \n        gallery.innerHTML = '';   \n\n        try {  \n            const data = await fetchImages(query); // Отримуємо дані\n\n            if (!data || !Array.isArray(data.hits)) {\n                iziToast.error({ title: 'Error', message: 'Unexpected response format' });\n                return;\n            }\n\n            if (data.hits.length === 0) {  \n                iziToast.info({ message: 'Sorry, there are no images matching your search query. Please try again!' });  \n            } else {  \n                renderImages(data.hits); // Передаємо зображення для рендерингу\n            }  \n        } catch (error) {  \n            iziToast.error({ title: 'Error', message: error.message });   \n        } finally {\n            loader.style.display = 'none';  \n        }  \n    });\n});"],"names":["API_KEY","fetchImages","query","url","response","error","getImages","imageHits","renderImages","images","gallery","showAlert","markup","image","message","iziToast","form","loader","event","data"],"mappings":"svBAAA,MAAMA,EAAU,qCAEHC,EAAc,MAAOC,GAAU,CACxC,MAAMC,EAAM,gCAAgCH,CAAO,MAAM,mBAAmBE,CAAK,CAAC,2DAElF,GAAI,CACA,MAAME,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GACV,MAAM,IAAI,MAAM,6BAA6B,EAGjD,OADa,MAAMA,EAAS,MAE/B,OAAQC,EAAO,CACZ,MAAMA,CACT,CACL,EAGMC,EAAY,MAAOJ,GAAU,CAC/B,GAAI,CAEA,MAAMK,GADa,MAAMN,EAAYC,CAAK,GACb,IAChC,OAAQG,EAAO,CACZ,QAAQ,MAAM,yBAA0BA,CAAK,CAChD,CACL,EAGAC,EAAU,QAAQ,ECxBX,MAAME,EAAgBC,GAAW,CACpC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAGjD,GAFAA,EAAQ,UAAY,GAEhBD,EAAO,SAAW,EAAG,CACrBE,EAAU,0EAA0E,EACpF,MACH,CAED,MAAMC,EAASH,EAAO,IAAII,GAAS;AAAA,mBACpBA,EAAM,aAAa;AAAA;AAAA,4BAEVA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA,gCAElCA,EAAM,KAAK;AAAA,gCACXA,EAAM,KAAK;AAAA,mCACRA,EAAM,QAAQ;AAAA,oCACbA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA,KAI9C,EAAE,KAAK,EAAE,EAEVH,EAAQ,mBAAmB,YAAaE,CAAM,CAClD,EAEaD,EAAaG,GAAY,CAClCC,EAAS,MAAM,CACX,MAAO,QACP,QAASD,EACT,SAAU,UAClB,CAAK,CACL,EC/BA,SAAS,iBAAiB,mBAAoB,IAAM,CAChD,MAAME,EAAO,SAAS,cAAc,YAAY,EAC1CC,EAAS,SAAS,cAAc,SAAS,EACzCP,EAAU,SAAS,cAAc,UAAU,EAEjD,GAAI,CAACM,EAAM,CACP,QAAQ,MAAM,uCAAuC,EACrD,MACH,CAEDA,EAAK,iBAAiB,SAAU,MAAOE,GAAU,CAC7CA,EAAM,eAAc,EAEpB,MAAMhB,EAAQgB,EAAM,cAAc,SAAS,YAAY,MAAM,OAE7D,GAAI,CAAChB,EAAO,CACRa,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,6BAA6B,CAAE,EACzE,MACH,CAEDE,EAAO,MAAM,QAAU,QACvBP,EAAQ,UAAY,GAEpB,GAAI,CACA,MAAMS,EAAO,MAAMlB,EAAYC,CAAK,EAEpC,GAAI,CAACiB,GAAQ,CAAC,MAAM,QAAQA,EAAK,IAAI,EAAG,CACpCJ,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,4BAA4B,CAAE,EACxE,MACH,CAEGI,EAAK,KAAK,SAAW,EACrBJ,EAAS,KAAK,CAAE,QAAS,0EAA4E,CAAA,EAErGP,EAAaW,EAAK,IAAI,CAE7B,OAAQd,EAAO,CACZU,EAAS,MAAM,CAAE,MAAO,QAAS,QAASV,EAAM,OAAO,CAAE,CACrE,QAAkB,CACNY,EAAO,MAAM,QAAU,MAC1B,CACT,CAAK,CACL,CAAC"}